@using WebMatrix.Data;
@using System.Web;
@using System.Web.Script.Serialization;


@{
    ViewBag.Title = "GEN Provider Directory";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@{
    var db = Database.Open("gen-provider-dbConnectionString");



    List<List<string>> locations = new List<List<string>>();

    var count = 0;
    //fix the length using query
    int[] id = new int[30];

    var idCount = 0;

    }


<div id="map" style="height: 500px; border: 2px solid #3872ac;"></div>

<script>


    @foreach (var row in db.Query("Select distinct Organization, Twitter, StreetAddress, TypeOfOrganization, PhoneNumber, Email, OrgID FROM Main_Database_For_Directory where OrgID = '7'"))
    {
        locations.Add(new List<string>());
        locations[count].Add(@row.Organization);
        locations[count].Add(@row.StreetAddress);
        locations[count].Add(@row.Twitter);
        locations[count].Add(@row.TypeOfOrganization);
        locations[count].Add(@row.PhoneNumber);
        locations[count].Add(@row.Email);
        locations[count].Add(@row.OrgID.ToString());
        id[count] = row.OrgID;
        count++;




    }

    var map;
    var geocoder;
    var bounds = new google.maps.LatLngBounds();

    function start() {
        var locations = @Html.Raw(Json.Encode(@locations));
        initMap(locations);
    }

    function initMap(locations) {
            map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 0, lng: 0 },
            zoom: 2
                        });
        geocoder = new google.maps.Geocoder();

        for (i = 0; i < locations.length; i++) {


            geocodeAddress(locations, i);
        }
    }
    google.maps.event.addDomListener(window, "load", initMap);


    function geocodeAddress(locations, i) {
        var title = locations[i][0];
        var address = locations[i][1];
        var url = locations[i][2];
        var type = locations[i][3];
        var phone = locations[i][4];
        var email = locations[i][5];
        var id = parseInt(locations[i][6]);

        
        geocoder.geocode({
            'address': locations[i][1]
        }, function (results, status) {
            if (status === 'OK') {
                var marker = new google.maps.Marker({
                        //icon: 'http://labs.google.com/ridefinder/images/mm_20_red.png',
                        
                    
                        map: map,
                        position: results[0].geometry.location,
                        title: title,
                        animation: google.maps.Animation.DROP
                        

                    })
                    infoWindow(marker, map, title, address, url, type, phone, email, id, i);
            bounds.extend(marker.getPosition());
            map.fitBounds(bounds);
        } else {
            alert("geocode of " + address + " failed:" + status);
        }
    });
    }

    function infoWindow(marker, map, title, address, url, type, phone, email, id, i) {
        google.maps.event.addListener(marker, 'click', function () {
           
            var html = "<div><h3>" + title + "</h3><h6>Type of organization: " + type + "</h6><p>" + address + "<br>" + phone + "<br>" + email + "</div><hr><a href='@Href("~/Display/Display?param1=" + id[idCount] )' class='btn btn-default'>See Details</a></p></div>";
                iw = new google.maps.InfoWindow({
                content: html,
                maxWidth: 350


            });
                iw.open(map, marker);
        });
        @idCount++;
    }


    //function createMarker(results) {
    //    var marker = new google.maps.Marker({
    //        icon: 'http://maps.google.com/mapfiles/ms/icons/blue.png',
    //        map: map,
    //        position: results[0].geometry.location,
    //        title: title,
    //        animation: google.maps.Animation.DROP,
    //        address: address,
    //        url: url
    //    })
    //    bounds.extend(marker.getPosition());
    //    map.fitBounds(bounds);
    //    infoWindow(marker, map, title, address, url);
    //    return marker;
    //}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCydyVvkTu1rv60sBjGKFcE4KvoXxR0gng&callback=start" async="" defer="defer" type="text/javascript"></script>



@*<input type="submit" name="Go" value="Get Map" onclick="getMap()"/>
<div id="map_canvas" style="width:900px; height: 500px"></div>*@

@*<!DOCTYPE html>
<html>
<head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
        /* Always set the map height explicitly to define the size of the div
               * element that contains the map. */
        #map {
            height: 500px;
        }


        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 300px;
            margin: 0;
            padding: 0;
        }
        
    </style>
</head>
<body>
    <div id="map"></div>
    <script>
        var map;
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -34.397, lng: 150.644 },
                zoom: 8
            });
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AlzaSyBmLlngFyyvBSEun5UAwKMtD4o3s0Aetx0&callback=initMap"
              async defer></script>
</body>
</html>*@









@*<div class="jumbotron">
<h2>Map</h2>
<p class="lead">World map of all known providers.</p>

</div>*@

    @*<img src="http://maps-api-presentations.appspot.com/io2012-spatial/airports-size2.png" style="width: 100%; height:100%">*@





